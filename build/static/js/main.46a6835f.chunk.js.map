{"version":3,"sources":["todoitem.js","index.js"],"names":["TodoItem","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggleDone","fetch","concat","todoItem","id","method","headers","Content-Type","body","JSON","stringify","title","done","state","then","setState","catch","error","console","log","_this2","react_default","a","createElement","className","data-tip","onClick","deleteItem","dist_default","type","defaultChecked","checkbox_default","checked","onChange","handleCheckboxChange","React","Component","App","renderTodos","todos","map","todo","todoitem_TodoItem","key","handleChange","event","target","value","handleSubmit","preventDefault","axios","url","content-type","data","toConsumableArray","filter","item","response","json","onSubmit","placeholder","rootElement","document","getElementById","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.46a6835f.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactTooltip from \"react-tooltip\";\nimport Checkbox from \"checkbox\";\n\nexport default class TodoItem extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      done: props.todoItem.done\n    };\n  }\n\n  toggleDone = () => {\n    fetch(\n      `https://kst-todo-list.herokuapp.com/todo/${this.props.todoItem.id}`,\n      {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          title: this.props.todoItem.title,\n          done: !this.state.done\n        })\n      }\n    )\n      .then(\n        this.setState({\n          done: !this.state.done\n        })\n      )\n      .catch(error => console.log(error));\n  };\n\n  render() {\n    return (\n      <div className=\"todo-item\">\n        <p data-tip=\"Delete\">\n          <button\n            className=\"delete-btn\"\n            onClick={() => this.props.deleteItem(this.props.todoItem.id)}\n          >\n            x\n          </button>\n        </p>\n        <ReactTooltip />\n        <input\n          onClick={this.toggleDone}\n          type=\"checkbox\"\n          defaultChecked={this.state.done}\n        />\n        <Checkbox\n          checked={this.state.checked}\n          onChange={this.handleCheckboxChange}\n        />\n\n        <p className={this.state.done ? \"done\" : null}>\n          {this.props.todoItem.title}\n        </p>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport axios from \"axios\";\nimport ReactTooltip from \"react-tooltip\";\n\nimport TodoItem from \"./todoitem\";\n\nimport \"./styles.css\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      todo: \"\",\n      todos: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://kst-todo-list.herokuapp.com/todos\")\n      .then(response => response.json())\n      .then(data => this.setState({ todos: data }));\n  }\n\n  renderTodos = () => {\n    return this.state.todos.map(todo => {\n      return (\n        <TodoItem key={todo.id} todoItem={todo} deleteItem={this.deleteItem} />\n      );\n    });\n  };\n\n  handleChange = event => {\n    this.setState({\n      todo: event.target.value\n    });\n    console.log(this.state.todo);\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    axios({\n      method: \"post\",\n      url: \"https://kst-todo-list.herokuapp.com/add-todo\",\n      headers: { \"content-type\": \"application/json\" },\n      data: {\n        title: this.state.todo,\n        done: false\n      }\n    })\n      .then(data => {\n        this.setState({\n          todos: [...this.state.todos, data.data],\n          todo: \"\"\n        });\n      })\n      .catch(error => console.log(error));\n  };\n\n  deleteItem = id => {\n    fetch(`https://kst-todo-list.herokuapp.com/todo/${id}`, {\n      method: \"DELETE\"\n    }).then(\n      this.setState({\n        todos: this.state.todos.filter(item => {\n          return item.id !== id;\n        })\n      })\n    );\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>ToDo List</h1>\n        <form onSubmit={this.handleSubmit} className=\"add-todo\">\n          <input\n            className=\"todo-input\"\n            type=\"text\"\n            placeholder=\"Add Todo . . .\"\n            value={this.state.todo}\n            onChange={this.handleChange}\n          />\n          <p data-tip=\"Add to List\">\n            <button className=\"add-btn\" type=\"submit\">\n              +\n            </button>\n          </p>\n          <ReactTooltip />\n        </form>\n        {this.renderTodos()}\n      </div>\n    );\n  }\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}